name : build

on : 
  push :
    branches : [ "main" ]

jobs:

  test :
    runs-on : ubuntu-latest

    steps:
      - name : checkout Source code
        uses : actions/checkout@v3

      - name : setup node.js 16.x
        uses : actions/setup-node@v3
        with :
          node-version : 16.x
          cache : npm

      - name : create config folder
        run : |
                mkdir config
                
      - name: create env file
        working-directory : ./config
        run: |
          echo "${{ secrets.ENV }}" > .env

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache
        with:
            path: node_modules
            key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name : test
        run : npm run test
    
  build :
    needs : test
    runs-on : ubuntu-latest

    steps:
      - uses : actions/checkout@v3

      - name : Set up Docker Buildx
        uses : docker/setup-buildx-action@v1
      
      - name : Login DockerHub
        uses : docker/login-action@v2
        with :
          username : ${{ secrets.DOCKERHUB_USERNAME }}
          password : ${{ secrets.DOCKERHUB_PASSWORD }}
    
      - name : build and push
        uses : docker/build-push-action@v3
        with :
          contenxt : .
          push : true
          tags : wlgns1501/nestjs-tdd:lasest
          
  deploy: 
    needs: build
    runs-on : ubuntu-latest

    steps:
        - name : check out
          uses : actions/checkout@v3

        - name: create docker env file
          run: |
            echo "${{ secrets.DOCKER_ENV }}" > .env
    
        - name : ls
          run : |
            ls
            
        - name : cat .env
          run : |
            cat .env
            docker-compose config

        - name : Login DockerHub
          uses : docker/login-action@v2
          with :
            username : ${{ secrets.DOCKERHUB_USERNAME }}
            password : ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: EC2 docker run
          uses : appleboy/ssh-action@v0.1.8
          with :
            host : ${{ secrets.EC2_HOST }}
            username : ubuntu
            key : ${{ secrets.EC2_ACCESS_TOKEN }}
            port: 22
            script : |
              sudo service docker restart
              cd nestjs-tdd
              sudo docker-compose pull
              sudo docker-compose up --force-recreate --build -d
    
